(()=>{var t={484:function(t){t.exports=function(){"use strict";var t=1e3,e=6e4,n=36e5,i="millisecond",s="second",a="minute",r="hour",o="day",l="week",u="month",c="quarter",d="year",m="date",h="Invalid Date",f=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,v=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,b={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(t){var e=["th","st","nd","rd"],n=t%100;return"["+t+(e[(n-20)%10]||e[n]||e[0])+"]"}},p=function(t,e,n){var i=String(t);return!i||i.length>=e?t:""+Array(e+1-i.length).join(n)+t},_={s:p,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),i=Math.floor(n/60),s=n%60;return(e<=0?"+":"-")+p(i,2,"0")+":"+p(s,2,"0")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var i=12*(n.year()-e.year())+(n.month()-e.month()),s=e.clone().add(i,u),a=n-s<0,r=e.clone().add(i+(a?-1:1),u);return+(-(i+(n-s)/(a?s-r:r-s))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:u,y:d,w:l,d:o,D:m,h:r,m:a,s,ms:i,Q:c}[t]||String(t||"").toLowerCase().replace(/s$/,"")},u:function(t){return void 0===t}},y="en",g={};g[y]=b;var M=function(t){return t instanceof D},$=function t(e,n,i){var s;if(!e)return y;if("string"==typeof e){var a=e.toLowerCase();g[a]&&(s=a),n&&(g[a]=n,s=a);var r=e.split("-");if(!s&&r.length>1)return t(r[0])}else{var o=e.name;g[o]=e,s=o}return!i&&s&&(y=s),s||!i&&y},S=function(t,e){if(M(t))return t.clone();var n="object"==typeof e?e:{};return n.date=t,n.args=arguments,new D(n)},k=_;k.l=$,k.i=M,k.w=function(t,e){return S(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var D=function(){function b(t){this.$L=$(t.locale,null,!0),this.parse(t)}var p=b.prototype;return p.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(k.u(e))return new Date;if(e instanceof Date)return new Date(e);if("string"==typeof e&&!/Z$/i.test(e)){var i=e.match(f);if(i){var s=i[2]-1||0,a=(i[7]||"0").substring(0,3);return n?new Date(Date.UTC(i[1],s,i[3]||1,i[4]||0,i[5]||0,i[6]||0,a)):new Date(i[1],s,i[3]||1,i[4]||0,i[5]||0,i[6]||0,a)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},p.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},p.$utils=function(){return k},p.isValid=function(){return!(this.$d.toString()===h)},p.isSame=function(t,e){var n=S(t);return this.startOf(e)<=n&&n<=this.endOf(e)},p.isAfter=function(t,e){return S(t)<this.startOf(e)},p.isBefore=function(t,e){return this.endOf(e)<S(t)},p.$g=function(t,e,n){return k.u(t)?this[e]:this.set(n,t)},p.unix=function(){return Math.floor(this.valueOf()/1e3)},p.valueOf=function(){return this.$d.getTime()},p.startOf=function(t,e){var n=this,i=!!k.u(e)||e,c=k.p(t),h=function(t,e){var s=k.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return i?s:s.endOf(o)},f=function(t,e){return k.w(n.toDate()[t].apply(n.toDate("s"),(i?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},v=this.$W,b=this.$M,p=this.$D,_="set"+(this.$u?"UTC":"");switch(c){case d:return i?h(1,0):h(31,11);case u:return i?h(1,b):h(0,b+1);case l:var y=this.$locale().weekStart||0,g=(v<y?v+7:v)-y;return h(i?p-g:p+(6-g),b);case o:case m:return f(_+"Hours",0);case r:return f(_+"Minutes",1);case a:return f(_+"Seconds",2);case s:return f(_+"Milliseconds",3);default:return this.clone()}},p.endOf=function(t){return this.startOf(t,!1)},p.$set=function(t,e){var n,l=k.p(t),c="set"+(this.$u?"UTC":""),h=(n={},n[o]=c+"Date",n[m]=c+"Date",n[u]=c+"Month",n[d]=c+"FullYear",n[r]=c+"Hours",n[a]=c+"Minutes",n[s]=c+"Seconds",n[i]=c+"Milliseconds",n)[l],f=l===o?this.$D+(e-this.$W):e;if(l===u||l===d){var v=this.clone().set(m,1);v.$d[h](f),v.init(),this.$d=v.set(m,Math.min(this.$D,v.daysInMonth())).$d}else h&&this.$d[h](f);return this.init(),this},p.set=function(t,e){return this.clone().$set(t,e)},p.get=function(t){return this[k.p(t)]()},p.add=function(i,c){var m,h=this;i=Number(i);var f=k.p(c),v=function(t){var e=S(h);return k.w(e.date(e.date()+Math.round(t*i)),h)};if(f===u)return this.set(u,this.$M+i);if(f===d)return this.set(d,this.$y+i);if(f===o)return v(1);if(f===l)return v(7);var b=(m={},m[a]=e,m[r]=n,m[s]=t,m)[f]||1,p=this.$d.getTime()+i*b;return k.w(p,this)},p.subtract=function(t,e){return this.add(-1*t,e)},p.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||h;var i=t||"YYYY-MM-DDTHH:mm:ssZ",s=k.z(this),a=this.$H,r=this.$m,o=this.$M,l=n.weekdays,u=n.months,c=function(t,n,s,a){return t&&(t[n]||t(e,i))||s[n].slice(0,a)},d=function(t){return k.s(a%12||12,t,"0")},m=n.meridiem||function(t,e,n){var i=t<12?"AM":"PM";return n?i.toLowerCase():i},f={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:k.s(o+1,2,"0"),MMM:c(n.monthsShort,o,u,3),MMMM:c(u,o),D:this.$D,DD:k.s(this.$D,2,"0"),d:String(this.$W),dd:c(n.weekdaysMin,this.$W,l,2),ddd:c(n.weekdaysShort,this.$W,l,3),dddd:l[this.$W],H:String(a),HH:k.s(a,2,"0"),h:d(1),hh:d(2),a:m(a,r,!0),A:m(a,r,!1),m:String(r),mm:k.s(r,2,"0"),s:String(this.$s),ss:k.s(this.$s,2,"0"),SSS:k.s(this.$ms,3,"0"),Z:s};return i.replace(v,(function(t,e){return e||f[t]||s.replace(":","")}))},p.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},p.diff=function(i,m,h){var f,v=k.p(m),b=S(i),p=(b.utcOffset()-this.utcOffset())*e,_=this-b,y=k.m(this,b);return y=(f={},f[d]=y/12,f[u]=y,f[c]=y/3,f[l]=(_-p)/6048e5,f[o]=(_-p)/864e5,f[r]=_/n,f[a]=_/e,f[s]=_/t,f)[v]||_,h?y:k.a(y)},p.daysInMonth=function(){return this.endOf(u).$D},p.$locale=function(){return g[this.$L]},p.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),i=$(t,e,!0);return i&&(n.$L=i),n},p.clone=function(){return k.w(this.$d,this)},p.toDate=function(){return new Date(this.valueOf())},p.toJSON=function(){return this.isValid()?this.toISOString():null},p.toISOString=function(){return this.$d.toISOString()},p.toString=function(){return this.$d.toUTCString()},b}(),w=D.prototype;return S.prototype=w,[["$ms",i],["$s",s],["$m",a],["$H",r],["$W",o],["$M",u],["$y",d],["$D",m]].forEach((function(t){w[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),S.extend=function(t,e){return t.$i||(t(e,D,S),t.$i=!0),S},S.locale=$,S.isDayjs=M,S.unix=function(t){return S(1e3*t)},S.en=g[y],S.Ls=g,S.p={},S}()},600:function(t,e,n){t.exports=function(t){"use strict";function e(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var n=e(t),i="января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),s="январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),a="янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),r="янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_"),o=/D[oD]?(\[[^[\]]*\]|\s)+MMMM?/;function l(t,e,n){var i,s;return"m"===n?e?"минута":"минуту":t+" "+(i=+t,s={mm:e?"минута_минуты_минут":"минуту_минуты_минут",hh:"час_часа_часов",dd:"день_дня_дней",MM:"месяц_месяца_месяцев",yy:"год_года_лет"}[n].split("_"),i%10==1&&i%100!=11?s[0]:i%10>=2&&i%10<=4&&(i%100<10||i%100>=20)?s[1]:s[2])}var u=function(t,e){return o.test(e)?i[t.month()]:s[t.month()]};u.s=s,u.f=i;var c=function(t,e){return o.test(e)?a[t.month()]:r[t.month()]};c.s=r,c.f=a;var d={name:"ru",weekdays:"воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),weekdaysShort:"вск_пнд_втр_срд_чтв_птн_сбт".split("_"),weekdaysMin:"вс_пн_вт_ср_чт_пт_сб".split("_"),months:u,monthsShort:c,weekStart:1,yearStart:4,formats:{LT:"H:mm",LTS:"H:mm:ss",L:"DD.MM.YYYY",LL:"D MMMM YYYY г.",LLL:"D MMMM YYYY г., H:mm",LLLL:"dddd, D MMMM YYYY г., H:mm"},relativeTime:{future:"через %s",past:"%s назад",s:"несколько секунд",m:l,mm:l,h:"час",hh:l,d:"день",dd:l,M:"месяц",MM:l,y:"год",yy:l},ordinal:function(t){return t},meridiem:function(t){return t<4?"ночи":t<12?"утра":t<17?"дня":"вечера"}};return n.default.locale(d,null,!0),d}(n(484))}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var a=e[i]={exports:{}};return t[i].call(a.exports,a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{"use strict";function t(t,e){const n=t.querySelector(".main-kanban-column-total-item");n.dataset.count=e.length,n.innerText=n.dataset.count}function e(e,n){let i,s,a=null,r=null,o=null;function l(t,e){const n=t.querySelectorAll(".main-kanban-item:not(.dragged)");for(const t of n){const n=t.getBoundingClientRect();if(e<n.top+n.height/2)return{element:t,position:"before"}}return{element:t,position:"last"}}function u(){r&&r.parentNode&&r.parentNode.removeChild(r),a&&(a.style.position="",a.style.left="",a.style.top="",a.style.zIndex="",a.classList.remove("dragged")),a=null,r=null}n.addEventListener("mousedown",(e=>{function n(t){a.style.left=t.pageX-i+"px",a.style.top=t.pageY-s+"px";const e=document.elementFromPoint(t.clientX,t.clientY),n=e?.closest(".main-kanban-column"),o=n?.querySelector(".main-kanban-column-items");if(o){!function(t){r&&("before"===t.position?t.element.parentNode.insertBefore(r,t.element):t.element.append(r))}(l(o,t.clientY))}}function c(t){n(t)}"item-remove"!==e.target.dataset.toggle&&(e.preventDefault(),document.body.style.cursor="grabbing",a=e.currentTarget,o=a.closest(".main-kanban-column"),i=e.clientX-a.getBoundingClientRect().left,s=e.clientY-a.getBoundingClientRect().top,r=function(t){const e=document.createElement("div");return e.className="kanban-placeholder",e.style.height=`${t}px`,e}(a.offsetHeight),a.parentNode.insertBefore(r,a),a.style.position="absolute",a.style.zIndex="1000",a.classList.add("dragged"),document.body.append(a),n(e),document.addEventListener("mousemove",c),document.addEventListener("mouseup",(function e(n){if(document.removeEventListener("mousemove",c),document.removeEventListener("mouseup",e),!a)return;const i=document.elementFromPoint(n.clientX,n.clientY),s=i?.closest(".main-kanban-column"),r=s?.querySelector(".main-kanban-column-items");if(r){const e=l(r,n.clientY);"before"===e.position?r.insertBefore(a,e.element):r.append(a),s!==o&&function(e,n){if(!localStorage.columns)return;const i=JSON.parse(localStorage.columns),s=o.dataset.id;if(!i[s])return;const a=+e.dataset.id,r=i[s].findIndex((t=>t.id===a));if(-1===r)return;const[l]=i[s].splice(r,1);i[n]||(i[n]=[]);i[n].push(l),localStorage.setItem("columns",JSON.stringify(i)),t(o,i[s]),t(document.querySelector(`[data-id="${n}"]`),i[n])}(a,s.dataset.id)}u()})))})),document.addEventListener("mouseleave",u)}class i{constructor(t){this.container=t,this.item=null}bindToDom(t){this.item=document.createElement("div"),this.item.classList.add("main-kanban-item"),this.item.setAttribute("data-type","item"),this.item.setAttribute("data-id",t.id),this.item.setAttribute("draggable","true"),this.item.innerHTML='\n      <div class="main-kanban-item-wrapper">\n        <div class="tasks-kanban-item">\n            <h4 class="tasks-kanban-item-title tasks-kanban-item-title--with-counter"></h4>\n            <div class="btn-remove" data-toggle="item-remove" title="remove item">&#10006</div>\n          <div class="tasks-kanban-item-text"></div>\n          <div class="tasks-kanban-item-deadline tasks-kanban-item-pointer">\n            <div class="ui-label ui-label-secondary ui-label-sm ui-label-fill">\n              <span class="ui-label-inner"></span>\n            </div>\n          </div>\n        </div>\n      </div>\n    ',this.item.querySelector(".tasks-kanban-item-title").innerText=t.title,this.item.querySelector(".tasks-kanban-item-text").innerText=t.text,this.item.querySelector(".ui-label-inner").innerText=t.time,this.container.append(this.item),this.events()}events(){const t=this.item.querySelector(".btn-remove");this.item.addEventListener("mouseover",(()=>this.showBtn())),this.item.addEventListener("mouseout",(()=>this.hideBtn())),t.addEventListener("click",(()=>this.removeItem())),e(this.container.closest(".main-kanban-grid"),this.item)}showBtn(){this.item.querySelector(".btn-remove").classList.add("btn-remove_visible")}hideBtn(){this.item.querySelector(".btn-remove").classList.remove("btn-remove_visible")}removeItem(){this.item.parentNode.removeChild(this.item);const e=JSON.parse(localStorage.columns),n=this.container.closest(".main-kanban-column").dataset.id,i=e[n].findIndex((t=>t.id===+this.item.dataset.id));e[n].splice(i,1),localStorage.setItem("columns",JSON.stringify(e)),t(this.container.closest(".main-kanban-column"),e[n])}}var s=n(600),a=n.n(s);const r=n(484);class o{constructor(){this.container=null,this.form=document.createElement("form"),this.currentElError=void 0}bindToDOM(t){this.container=t,this.drawUi(),this.events()}drawUi(){this.checkBinding(),this.form.setAttribute("id","item-form"),this.form.setAttribute("novalidate","novalidate"),this.form.innerHTML='\n        <div class="form-control">\n          <input data-id="title" class="input" type="text" placeholder="title" autocomplete="off" required> \n        </div>\n        <div class="form-control">\n          <input data-id="text" class="input" type="text" placeholder="text" autocomplete="off" required>\n        </div>\n        <div class="card-btn">\n          <button type="submit" class="btn " data-toggle="trello" title="Add card">Add Card</button>\n          <button type="button" class="btn btn-close" data-toggle="form-close" title="Close form">&#10006</button>\n        </div>\n      ',this.container.append(this.form),this.formElements=[...this.form.elements]}checkBinding(){if(null===this.container)throw new Error("Form not bind to DOM")}events(){this.form.querySelector('[data-toggle="form-close"]').addEventListener("click",(()=>this.closeForm())),this.form.addEventListener("submit",(t=>this.onSubmit(t)))}closeForm(){this.form.parentNode.removeChild(this.form)}onSubmit(t){t.preventDefault();const e=this.form.querySelector('[data-id="title"]'),n=this.form.querySelector('[data-id="text"]');if(!e.value||!n.value)return;const s={};this.formElements.forEach((t=>{const e=t.dataset.id,{value:n}=t;e&&(s[e]=n)})),s.id=Date.now(),s.time=r().locale(a()).format("DD MMMM YYYY");new i(this.container.querySelector(".main-kanban-column-items")).bindToDom(s);const o=this.container.querySelector(".main-kanban-column-total-item");o.dataset.count=+o.dataset.count+1,o.innerText=o.dataset.count,this.closeForm(),localStorage.getItem("columns")||localStorage.setItem("columns",JSON.stringify({}));const l=JSON.parse(localStorage.columns);l.hasOwnProperty(this.container.dataset.id)||(l[this.container.dataset.id]=[]),l[this.container.dataset.id].push(s),localStorage.setItem("columns",JSON.stringify(l))}}class l{constructor(t){this.container=t,this.column=null,this.itemCount=0}bindToDOM(t){this.column=document.createElement("div"),this.column.classList.add("main-kanban-column"),this.column.classList.add("main-kanban-column-droppable"),this.column.setAttribute("data-id",t.id),""!==t.classColor&&this.column.classList.add(t.classColor),this.column.innerHTML=`\n      <div class="main-kanban-column-header">\n        <div class="main-kanban-column-title">\n          <div class="main-kanban-column-title-wrapper main-kanban-column-title-dark">\n            <div class="main-kanban-column-title-bg"></div>\n            <div class="main-kanban-column-title-info">\n              <div class="main-kanban-column-title-text">\n                <div class="main-kanban-column-title-text-inner">${t.title}</div>\n                <div class="main-kanban-column-total-item" data-count="${this.itemCount}">${this.itemCount}</div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class="main-kanban-column-subtitle">\n          <div class="main-kanban-column-subtitle-box">\n            <div class="main-kanban-column-add-item-button">\n              <div class="main-kanban-column-add-item-button-text">Быстрая задача</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="main-kanban-column-body" data-type="column">\n        <div class="main-kanban-column-items"></div>\n      </div>\n    `,this.container.append(this.column),this.drawUi(t.id),this.events()}events(){this.column.querySelector(".main-kanban-column-subtitle-box").addEventListener("click",(()=>this.addItem()))}drawUi(t){if(localStorage.columns){const e=JSON.parse(localStorage.columns);if(e&&e[t]){e[t].forEach((t=>{new i(this.column.querySelector(".main-kanban-column-items")).bindToDom(t)})),this.itemCount=e[t].length;const n=this.column.querySelector(".main-kanban-column-total-item");n.dataset.count=this.itemCount,n.innerText=n.dataset.count}}}addItem(){if(!this.column.querySelector("form")&&!document.querySelector(".dragged")){(new o).bindToDOM(this.column)}}}console.log("it works!");new class{constructor(t){this.container=t,this.board=null}bindToDOM(){this.board=document.createElement("div"),this.board.classList.add("tasks-kanban-border"),this.board.setAttribute("id","task_kanban"),this.board.innerHTML='\n      <div class="main-kanban">\n        <div class="main-kanban-inner">\n          <div class="main-kanban-grid"></div>\n        </div>\n      </div>\n      ',this.addColumn(),this.container.append(this.board)}addColumn(){const t=this.board.querySelector(".main-kanban-grid"),e=new l(t),n=new l(t),i=new l(t);e.bindToDOM({classColor:"",title:"TODO",id:"left"}),n.bindToDOM({classColor:"main-kanban-column-empty",title:"In progress",id:"center"}),i.bindToDOM({classColor:"main-kanban-column-right",title:"Done",id:"right"})}}(document.querySelector(".trello-container")).bindToDOM()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,